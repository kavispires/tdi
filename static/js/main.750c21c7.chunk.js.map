{"version":3,"sources":["logo.svg","pages/Home.tsx","pages/ImageCardsPage.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["Home","className","src","logo","alt","Header","Layout","Content","items","label","key","icon","FileImageOutlined","ImageCards","useState","current","setCurrent","onClick","e","console","log","selectedKeys","mode","theme","PreviewGroup","Array","fill","map","i","id","width","process","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gKAAe,MAA0B,iC,QCElC,SAASA,IACd,OACE,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,a,gDCDzCC,EAAoBC,IAApBD,OAAQE,EAAYD,IAAZC,QAEVC,EAA4B,CAChC,CACEC,MAAO,YACPC,IAAK,KACLC,KAAM,cAACC,EAAA,EAAD,KAER,CACEH,MAAO,YACPC,IAAK,KACLC,KAAM,cAACC,EAAA,EAAD,KAER,CACEH,MAAO,YACPC,IAAK,KACLC,KAAM,cAACC,EAAA,EAAD,KAER,CACEH,MAAO,YACPC,IAAK,KACLC,KAAM,cAACC,EAAA,EAAD,KAER,CACEH,MAAO,YACPC,IAAK,KACLC,KAAM,cAACC,EAAA,EAAD,MAIH,SAASC,IACd,MAA8BC,mBAAS,MAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAOA,OACE,eAAC,IAAD,CAAQf,UAAU,OAAlB,UACE,cAACI,EAAD,CAAQJ,UAAU,eAAlB,SACE,cAAC,IAAD,CAAMgB,QAR0B,SAACC,GACrCC,QAAQC,IAAI,SAAUF,GACtBF,EAAWE,EAAER,MAMeW,aAAc,CAACN,GAAUO,KAAK,aAAad,MAAOA,EAAOe,MAAM,WAEzF,cAAChB,EAAD,CAASN,UAAU,gBAAnB,SACE,cAAC,IAAMuB,aAAP,UACGC,MAAM,IACJC,KAAK,GACLC,KAAI,SAACT,EAAGU,GACP,IAAMC,EAAKX,EAAIU,EAAI,GAAR,WAAiBV,EAAIU,GAArB,UAA8BV,EAAIU,GAE7C,OACE,cAAC,IAAD,CAEEE,MAAO,IACP5B,IAAG,UAAK6B,OAAL,sBAAyChB,EAAzC,YAAoDc,EAApD,SAHL,cACcA,cC1CfG,MAXf,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAClC,EAAD,MACzB,cAAC,IAAD,CAAOiC,KAAK,eAAeC,QAAS,cAACrB,EAAD,YCG7BsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.750c21c7.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.95dca254.svg\";","import logo from '../logo.svg';\n\nexport function Home() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n      </header>\n    </div>\n  );\n}\n","import { FileImageOutlined } from '@ant-design/icons';\nimport { Image, Menu, MenuProps } from 'antd';\nimport { useState } from 'react';\nimport { Layout } from 'antd';\n\nconst { Header, Content } = Layout;\n\nconst items: MenuProps['items'] = [\n  {\n    label: 'TD Deck 1',\n    key: 'd1',\n    icon: <FileImageOutlined />,\n  },\n  {\n    label: 'TD Deck 2',\n    key: 'd2',\n    icon: <FileImageOutlined />,\n  },\n  {\n    label: 'TD Deck 3',\n    key: 'd3',\n    icon: <FileImageOutlined />,\n  },\n  {\n    label: 'TD Deck 4',\n    key: 'd4',\n    icon: <FileImageOutlined />,\n  },\n  {\n    label: 'TD Deck 5',\n    key: 'd5',\n    icon: <FileImageOutlined />,\n  },\n];\n\nexport function ImageCards() {\n  const [current, setCurrent] = useState('d1');\n\n  const onClick: MenuProps['onClick'] = (e) => {\n    console.log('click ', e);\n    setCurrent(e.key);\n  };\n\n  return (\n    <Layout className=\"page\">\n      <Header className=\"page__header\">\n        <Menu onClick={onClick} selectedKeys={[current]} mode=\"horizontal\" items={items} theme=\"dark\" />\n      </Header>\n      <Content className=\"page__content\">\n        <Image.PreviewGroup>\n          {Array(84)\n            .fill(1)\n            .map((e, i) => {\n              const id = e + i < 10 ? `0${e + i}` : `${e + i}`;\n\n              return (\n                <Image\n                  key={`img-${id}`}\n                  width={150}\n                  src={`${process.env.PUBLIC_URL}/images/td/${current}/${id}.jpg`}\n                />\n              );\n            })}\n        </Image.PreviewGroup>\n      </Content>\n    </Layout>\n  );\n}\n","import { HashRouter, Route, Routes } from 'react-router-dom';\nimport { Home } from 'pages/Home';\nimport { ImageCards } from 'pages/ImageCardsPage';\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/image-cards\" element={<ImageCards />} />\n      </Routes>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}